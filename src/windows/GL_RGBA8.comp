#version 430 core

layout (local_size_x = 1, local_size_y = 1, local_size_z = 1) in;

layout(rgba8, binding = 0) readonly uniform image2D imgInput;
layout(rgba8, binding = 1) writeonly uniform image2D imgOutput;

layout(std430, binding = 0) buffer matBuffer {
    float mat[];
};
layout(location=0) uniform int n;
layout(location=1) uniform int m;

layout(location=2) uniform int width;
layout(location=3) uniform int height;

void main() {
    ivec2 texelCoord = ivec2(gl_GlobalInvocationID.xy);

    vec4 value = imageLoad(imgInput, texelCoord);

    // do stuff with read data
    value = value * mat[(texelCoord.x % n) * m + (texelCoord.y % m)];

    imageStore(imgOutput, texelCoord, value);
}